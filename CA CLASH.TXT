port: 7890
allow-lan: true
mode: rule
log-level: info
external-controller: 127.0.0.1:9090

proxies:
  - name: Canada1 [x1]
    type: socks5
    server: as.swiftproxy.net
    port: 7878
    username: pp186201_custom_zone_CA_st_Ontario_sid_22739628_time_180
    password: P186201

  - name: Canada2 [x1]
    type: socks5
    server: as.swiftproxy.net
    port: 7878
    username: pp186201_custom_zone_CA_st_Ontario_sid_87881744_time_180
    password: P186201

  - name: Canada3 [x1]
    type: socks5
    server: as.swiftproxy.net
    port: 7878
    username: pp186201_custom_zone_CA_st_Ontario_sid_89833946_time_180
    password: P186201

  - name: Canada4 [x1]
    type: socks5
    server: as.swiftproxy.net
    port: 7878
    username: pp186201_custom_zone_CA_st_Ontario_sid_44731261_time_180
    password: P186201

  - name: Canada5 [x1]
    type: socks5
    server: as.swiftproxy.net
    port: 7878
    username: pp186201_custom_zone_CA_st_Ontario_sid_56798258_time_180
    password: P186201

  - name: Canada6 [x1]
    type: socks5
    server: as.swiftproxy.net
    port: 7878
    username: pp186201_custom_zone_CA_st_Ontario_sid_35651569_time_180
    password: P186201

  - name: Canada7 [x1]
    type: socks5
    server: as.swiftproxy.net
    port: 7878
    username: pp186201_custom_zone_CA_st_Ontario_sid_16192189_time_180
    password: P186201

  - name: Canada8 [x1]
    type: socks5
    server: as.swiftproxy.net
    port: 7878
    username: pp186201_custom_zone_CA_st_Ontario_sid_44287538_time_180
    password: P186201

  - name: Canada9 [x1]
    type: socks5
    server: as.swiftproxy.net
    port: 7878
    username: pp186201_custom_zone_CA_st_Ontario_sid_55694528_time_180
    password: P186201

  - name: Canada10 [x1]
    type: socks5
    server: as.swiftproxy.net
    port: 7878
    username: pp186201_custom_zone_CA_st_Ontario_sid_25991832_time_180
    password: P186201

proxy-groups:
  - name: 🚀 节点选择
    type: select
    proxies:
      - ♻️ 自动选择
      - DIRECT
      - Canada1 [x1]
      - Canada2 [x1]
      - Canada3 [x1]
      - Canada4 [x1]
      - Canada5 [x1]
      - Canada6 [x1]
      - Canada7 [x1]
      - Canada8 [x1]
      - Canada9 [x1]
      - Canada10 [x1]

  - name: ♻️ 自动选择
    type: url-test
    url: http://www.gstatic.com/generate_204
    interval: 300
    tolerance: 50
    proxies:
      - Canada1 [x1]
      - Canada2 [x1]
      - Canada3 [x1]
      - Canada4 [x1]
      - Canada5 [x1]
      - Canada6 [x1]
      - Canada7 [x1]
      - Canada8 [x1]
      - Canada9 [x1]
      - Canada10 [x1]

rules:
  - MATCH,🚀 节点选择